const openButton = document.querySelector(".hamburger");
const hamMenu = document.querySelector(".hamburger-menu");
const hamMenuClose = document.querySelector(".hamburger-menu__close");
const hamburgerBody = document.body;

openButton.addEventListener("click", e => {
        e.preventDefault();
        hamMenu.classList.add("hamburger-menu-active");
        hamburgerBody.classList.add("fancybox-active");
});

hamMenu.addEventListener("click", e => {
        if (e.target == hamMenu || e.target.classList.contains("hamburger-menu__link")) {
            hamMenu.classList.remove("hamburger-menu-active");
            hamburgerBody.classList.remove("fancybox-active");
        }
});

hamMenuClose.addEventListener("click", e => {
        e.preventDefault();
        hamMenu.classList.remove("hamburger-menu-active")
});;let myMap;

const init = () => {
    myMap = new ymaps.Map("map", {
        center: [55.749929, 37.616310],
        zoom: 15,
        controls: []
    });

    let coords = [
        [55.75027, 37.603737]
    ];

    const myCollection = new ymaps.GeoObjectCollection({}, {
        draggable: false,
        iconLayout: 'default#image',
        iconImageHref: './img/marker.svg',
        iconImageSize: [58, 73],
        iconImageOffset: [-3, -42]
    });

    coords.forEach(coord => {
        myCollection.add(new ymaps.Placemark(coord));
    });

    // for (let i = 0; i < coords.length; i++) {
    //     myCollection.add(new ymaps.Placemark(coords[i]));
    // };

    
    myMap.geoObjects.add(myCollection);

    myMap.behaviors.disable("scrollZoom");
};

ymaps.ready(init);;const validateFields = (form, fieldsArray) => {
    fieldsArray.forEach(field => {
        field.removeClass("input-error");
        if (field.val().trim() === "") {
            field.addClass("input-error");
        }
    });

    const errorFields = form.find(".input-error");

    return errorFields.length === 0;
}

$(".form").submit(e => {
    e.preventDefault();

    const form = $(e.currentTarget);
    const name = form.find("[name='name']");
    const phone = form.find("[name='phone']");
    const comment = form.find("[name='comment']");
    const to = form.find("[name='to']");

    const modal = $("#modal");
    const content = modal.find(".modal__content");

    modal.removeClass("error-modal");

    const isValid = validateFields(form, [name, phone, comment, to]);

    if (isValid) {
        const request = $.ajax({
            url: "https://webdev-api.loftschool.com/sendmail",
            method: "post",
            data: {
                name: name.val(),
                phone: phone.val(),
                comment: comment.val(),
                to: to.val(),
            },
        });

        request.done((data) =>{
            content.text(data.message);
        });

        request.fail(data =>{
            const message = data?.responseJSON?.message ? data.responseJSON.message : "Произошла ошибка, попробуйте позднее";
            content.text(message);
            modal.addClass("error-modal");
        });

        request.always(() => {
            $.fancybox.open({
                src: "#modal",
                type: "inline",
            });
        });
    }
});

$(".app-submit-button").click(e => {
    e.preventDefault();

    $.fancybox.close();
});;const sections = $("section");
const display = $(".main-content");
const sideMenu = $(".fixed-menu");
const menuItems = sideMenu.find(".fixed-menu__item");
const opsBody = document.body;

const mobileDetect = new MobileDetect(window.navigator.userAgent);
const isMobile = mobileDetect.mobile();

let inScroll = false;

sections.first().addClass("active");

const countSectionPosition = sectionEq => {
    const position = sectionEq * -100;

    if (isNaN(position)) {
        console.error("передано не верное значение в countSectionPosition");
        return 0;
    }

    return position;
}

const changeMenuThemeForSection = (sectionEq) => {
    const currentSection = sections.eq(sectionEq);
    const menuTheme = currentSection.attr("data-sidemenu-theme");
    const activeClass = "fixed-menu--black";

    if (menuTheme === "black") {
        sideMenu.addClass(activeClass);
    } else {
        sideMenu.removeClass(activeClass);
    }
};

const resetActiveClassForItem = (items, itemEq, activeClass) => {
    items.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);
}

const performTransition = sectionEq => {
    if (inScroll || opsBody.classList.contains("fancybox-active")) return;

    const transitionOver = 1000;
    const mouseInertiaOver = 300;

    inScroll = true;
        
    const position = countSectionPosition(sectionEq);

    changeMenuThemeForSection(sectionEq);

    display.css({
        transform: `translateY(${position}%)`,
    });
    
    resetActiveClassForItem(sections, sectionEq, "active");

    setTimeout (() => {
        inScroll = false;
        resetActiveClassForItem(menuItems, sectionEq, "fixed-menu__item--active")
    }, transitionOver + mouseInertiaOver);
};

const viewportScroller = () => {
    const activeSection = sections.filter(".active");
    const nextSection = activeSection.next();
    const prevSection = activeSection.prev();

    return {
        next () {
            if (nextSection.length) {
                performTransition(nextSection.index());
            }
        },
        prev () {
            if (prevSection.length) {
                performTransition(prevSection.index());
            }
        },
    };
};

$(window).on("wheel", e => {
    const deltaY = e.originalEvent.deltaY;
    const scroller = viewportScroller();

    if (deltaY > 0) {
        scroller.next();
    }

    if (deltaY < 0) {
        scroller.prev();
    }
});

$(window).on("keydown", e => {

    const tagName = e.target.tagName.toLowerCase();
    const userTypingInInputs = tagName === "input" || tagName === "textarea";
    const scroller = viewportScroller();

    if (userTypingInInputs) return;

    switch (e.keyCode) {
        case 38:
            scroller.prev();;
            break;
        
        case 40:
            scroller.next();
            break;
        }
});

$(".wrapper").on("touchmove", e => e.preventDefault());

$("[data-scroll-to]").click (e => {
    e.preventDefault();

    const $this = $(e.currentTarget);
    const target = $this.attr("data-scroll-to");
    const reqSection = $(`[data-section-id=${target}]`);
    opsBody.classList.remove("fancybox-active");

    performTransition(reqSection.index());
});

if (isMobile) {
    // https://github.com/mattbryson/TouchSwipe-Jquery-Plugin
$("body").swipe( {
    //Generic swipe handler for all directions
    swipe:function(event, direction) {
        const scroller = viewportScroller();
        let scrollDirection = "";

        if (direction === "up") scrollDirection = "next";
        if (direction === "down") scrollDirection = "prev";

        if (!scrollDirection) return;

        scroller[scrollDirection]();
    }
});
};let video;
let durationControl;
let soundControl;
let intervalId;
let playImg = document.querySelector('.player__button-img');

document.addEventListener('DOMContentLoaded', e => {
  video = document.getElementById('video');

  video.addEventListener('click', playStop);

  let playButtons = document.querySelectorAll('.play');
  for (let i = 0; i < playButtons.length; i++) {
    playButtons[i].addEventListener('click', playStop);
  }

  let micControl = document.getElementById('micLevel');
  micControl.addEventListener('click', soundOf);

  durationControl = document.getElementById('durationLevel');
  durationControl.addEventListener('mousedown', stopInterval);
  durationControl.addEventListener('click', setVideoDuration);

  durationControl.min = 0;
  durationControl.value = 0;

  soundControl = document.getElementById('volumeLevel');
  soundControl.addEventListener('click', changeSoundVolume);
  soundControl.addEventListener('mouseup', changeSoundVolume);

  soundControl.min = 0;
  soundControl.max = 10;
  soundControl.value = soundControl.max;
})

function playStop(){
  playImg.classList.toggle('player__button-img--active');

  durationControl.max = video.duration;

  if (video.paused) {
    video.play();
    intervalId = setInterval(updateDuration , 1000/66);
  } else {
    clearInterval(intervalId);
    video.pause();
  }
}

function updateDuration(){
  durationControl.value = video.currentTime;
  let step = video.duration / 100;
  let percent = video.currentTime / step;
  durationControl.style.background = `linear-gradient(90deg, #FEDB3F 0%, #FEDB3F ${percent}%, #626262 ${percent}%)`;
}

function stopInterval(){
  video.pause();
  clearInterval(intervalId);
}

function setVideoDuration(){
  if (video.paused){
    playImg.classList.add('player__button-img--active');
    video.play();
  } else {
    video.pause();
  }

  video.currentTime = durationControl.value;
  intervalId = setInterval(updateDuration , 1000/66);
}

function changeSoundVolume(){
  video.volume = soundControl.value / 10;
}

function soundOf(){
  if (video.volume === 0){
    video.volume = soundLevel;
    soundControl.value = soundLevel * 10;
  } else {
    soundLevel = video.volume;
    video.volume = 0;
    soundControl.value = 0;
  }
};const mesureWidth = item => {
    let reqItemWidth = 0;
    const screenWidth = $(window).width();
    const container = item.closest(".products-menu__list");
    const titleBlocks = container.find(".products-menu__title");
    const titlesWidth = titleBlocks.width() * titleBlocks.length;

    const textContainer = item.find(".products-menu__container");
    const paddingLeft = parseInt(textContainer.css("padding-left"));
    const paddingRight = parseInt(textContainer.css("padding-right"));

    const isTablet = window.matchMedia("(max-width: 768px)").matches;
    const isMobile = window.matchMedia("(max-width: 480px)").matches;

    if (isTablet) {
        reqItemWidth = screenWidth - titlesWidth;
    } 
    if (isMobile) {
        reqItemWidth = screenWidth - titleBlocks.width();
    } 
    
    if (!isTablet && !isMobile) {
        reqItemWidth = 524;
    }

    return {
        container: reqItemWidth,
        textContainer: reqItemWidth - paddingRight - paddingLeft
    }
};

const closeEveryItemInContainer = container => {
    const productsItems = container.find(".products-menu__item");
    const productsContent = container.find(".products-menu__content");

    productsItems.removeClass("active");
    productsContent.width(0);
};

const openItemProducts = item => {
    const hiddenContent = item.find(".products-menu__content");
    const reqWidth = mesureWidth(item);
    const textBlock = item.find(".products-menu__container");

    item.addClass("active");
    hiddenContent.width(reqWidth.container);
    textBlock.width(reqWidth.textContainer)
};

$(".products-menu__title").on("click", e => {
    e.preventDefault();

    const $this = $(e.currentTarget);
    const item = $this.closest(".products-menu__item");
    const itemOpened = item.hasClass("active");
    const container = $this.closest(".products-menu__list");

    if (itemOpened) {
        closeEveryItemInContainer(container);
      } else {
        closeEveryItemInContainer(container);
        openItemProducts(item);
      }
});;const findBlockByAlias = (alias) => {
    return $(".reviews__item").filter((ndx, item) => {
        return $(item).attr("data-linked-with") === alias;
    });
};

$(".interactive-avatar__link").click((e) => {
    e.preventDefault();

    const $this = $(e.currentTarget);
    const target = $this.attr("data-open");
    const showItem = findBlockByAlias(target);
    const currentItem = $this.closest(".interactive-avatar");

    currentItem.addClass("interactive-avatar--active").siblings().removeClass("interactive-avatar--active");

    showItem.addClass("reviews__item--active").siblings().removeClass("reviews__item--active");
});
;const slider = $(".products__list").bxSlider({
    controls: false, 
    pager: false
});

$(".products-slider__arrow--direction--prev").click(e => {
    e.preventDefault();
    slider.goToPrevSlide();
});

$(".products-slider__arrow--direction--next").click(e => {
    e.preventDefault();
    slider.goToNextSlide();
});;const openItem = item => {
    const container = item.closest(".team__item");
    const contentBlock = container.find(".team__content");
    const textBlock = contentBlock.find(".team__content-block");
    const reqHeight = textBlock.height();

    container.addClass("team__item--active");
    contentBlock.height(reqHeight);
}

const closeEveryItem = container => {
    const items = container.find(".team__content");
    const itemContainer = container.find(".team__item");

    itemContainer.removeClass("team__item--active");
    items.height(0);
}

$(".team__name").click(e => {
    const $this = $(e.currentTarget);
    const container = $this.closest(".team__list");
    const elemContainer = $this.closest(".team__item");

    if (elemContainer.hasClass("team__item--active")) {
        closeEveryItem(container);
    } else {
        closeEveryItem(container);
        openItem($this);
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
